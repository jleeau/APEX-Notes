//If and Loops

DOT NOTATION

- 3 Functions:
	- Access Fields: Go into a record's fields, e.g. myLead.Phone, myLead.Email.
	- Access Relationships: Can jump across related records through their relationships.
	- Access Methods: Secret methods and tools. Every data type has a set of secret methods.
	
Accessing Fields and Relationships
- Examples:
	- myContact.AccountId. You have a variable myContact of type 'Contact' and you want to access AccountId.
	- myOpportunity.Account.OwnerId.Email. A combination of dot notation accessing relationships and then fields. First, goes into a related Account relationship, then looks up the OwnerId field of that associated Account, then Owner's Email.
	- OwnerId vs. Owner: Including Id will get the record's Id field, but omitting it gives you the Lookup relationship.
	- myOpportunity.Account.Territory__c vs. myOpportunity.Account.Territory__c.Name: Same thing, but with custom field/relationship.
	
2 Methods
- Instance Methods: Have prerequisites; must have an instance of that datatype, i.e. a variable of that datatype. The variable is creating an instance.
	String: myString.capitalize();	myString.length();	myString.contains('@gmail.com');
	Date: myDate.addDays(5);	myDate.isLeapYear();	myDate.year();
	List: myList.add(myDate);		myList.clear();		myList.isEmpty();
- Global Methods: No prerequisites. Can use it any time.
	Date.today();	Date.newInstance('2020', '1', '31');
	DateTime.now();
	UserInfo.getUserId();		UserInfo.getProfileId();
	Math.random();	Math.pi();

- To see all the possible methods, just google [SF String Methods].
- The output of most code statements is an instance of a datatype. E.g.:
	Date momsBirthday = Date.newInstance(1970, 2, 17);
	momsBirthday.addYears(10);	//Becomes a Date data type
	momsBirthday.isLeapYear();	//Becomes a Bool data type
	momsBirthday.format();		//Becomes a String
	momsBirthday.dayOfYear();	//Becomes an Integer. (How many days throughout the year the date is)
	Boolean extraDayToBuyPresent = momsBirthday.isLeapYear();	//Have to assign output to a variable to preserve it.
- Chaining dot notation:
	DateTime bestTimeToCode = DateTime.now();	//Creates DateTime variable
	bestTimeToCode.addHours(1);		//Stays as DateTime
	bestTimeToCode.addHours(1).date();		//Converts DateTime to Date
	bestTimeToCode.addHours(1).date().addDays(5);		//Date
	bestTimeToCode.addHours(1).date().addDays(5).year();		//Integer
	bestTimeToCode.addHours(1).date().addDays(5).year().format();		//String
	



IF STATEMENTS
- Run code under certain conditions.
	





	
